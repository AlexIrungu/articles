require 'pry'
require_relative '../config/environment'


#enter author
puts "Enter Author: "
auth_name = gets.chomp
author = Author.new(auth_name)


puts author.name


#pp alex.name
#pp bashira.name

#
 puts "Enter Magazine Name:  "
 mag_name = gets.chomp
 puts "Enter Magazine Category:   "
 mag_category = gets.chomp
 new_mag = Magazine.new(mag_name, mag_category)
puts new_mag.name
puts new_mag.category




puts "Enter Article:   "
article_title = gets.chomp

 new_article = Article.new(author, new_mag, article_title)
 puts new_article.author



# Getting all authors
puts "Please Enter 'authors' to get all authors"

input = gets.chomp

if input == "authors"
    Author.all.each {|author| puts "Author: #{author.name}"}
end

# Getting all magazines
puts "Kindly enter 'magazines' to get all magazines."
input = gets.chomp

if input == "magazines"
    Magazine.all.each{|magazine| puts "magazine name: #{magazine.name}"}
end

# Getting all articles
puts "Kindly enter 'articles' to get all articles"
input = gets.chomp

if input == "articles"
    Article.all.each{|article| puts "article title: #{article.title}"}
end

#Getting all topics
puts "Kindly enter 'topic' to get all topics:"
input = gets.chomp

if input == "topic"
  Magazine.all.each {|magazine| puts "magazine topic: #{magazine.category}"}
end

# Finding magazine by name
puts "Kindly enter the magazine name you would like to find:"
input = gets.chomp

Magazine.all.each do |magazine|
  if magazine.name == input
    puts "magazine name: #{magazine.name}"
  end
end

# Getting contributing_authors by magazine name
puts "Kindly enter  magazine name you would like to find the contributing authors for:"
input = gets.chomp

Magazine.all.each do |magazine|
  if magazine.name == input
    puts "contributing authors: #{magazine.contributing_authors}"
  end
end

# Finding article titles by magazine name
puts "Kindly enter name of magazine you would like to find the article titles for:"
input = gets.chomp

Magazine.all.each do |magazine|
  if magazine.name == input
    puts "article titles: #{magazine.article_titles}"
  end
end







# #print 
# puts "Authors:"
# puts "--------"
# puts "Author name: #{author.name}"
# puts "Magazines: #{new_mag}\n\n"

# # puts "Author name: #{bashira.name}"
# # puts "Magazines: #{bashira.magazines.map(&:name).join(', ')}\n\n"

# puts "Magazines:"
# puts "-----------"
# puts "Magazine name: #{alex_mag}"
